---
clusterName: "elasticsearch"
nodeGroup: "master"

roles:
  - master
  - data
  - ingest

replicas: 3
minimumMasterNodes: 2

esMajorVersion: "8"

esConfig:
  elasticsearch.yml: |
    xpack.security.enabled: false
    xpack.security.transport.ssl.enabled: false
    xpack.security.http.ssl.enabled: false

createCert: false

extraEnvs:
  - name: ELASTIC_PASSWORD
    value: "yakovbe123"

secret:
  enabled: false
  password: "" # generated randomly if not defined

image: "docker.elastic.co/elasticsearch/elasticsearch"
imageTag: "8.1.0"
imagePullPolicy: "IfNotPresent"

esJavaOpts: "" # example: "-Xmx1g -Xms1g"

resources:
  requests:
    cpu: "100m"
    memory: "128Mi"
  limits:
    cpu: "100m"
    memory: "128Mi"

networkHost: "0.0.0.0"

volumeClaimTemplate:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 30Gi

persistence:
  enabled: true

protocol: http
httpPort: 9200
transportPort: 9300

service:
  enabled: true
  type: NodePort
  publishNotReadyAddresses: false
  nodePort: "30200"
  httpPortName: http
  transportPortName: transport

ingress:
  enabled: false
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  className: "nginx"
  pathtype: ImplementationSpecific
  hosts:
    - host: es.swas.world
      paths:
        - path: /

updateStrategy: RollingUpdate

maxUnavailable: 1

podSecurityContext:
  fsGroup: 1000
  runAsUser: 1000

securityContext:
  capabilities:
    drop:
      - ALL
  runAsNonRoot: true
  runAsUser: 1000

terminationGracePeriod: 120

sysctlVmMaxMapCount: 262144

readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 3
  timeoutSeconds: 5

clusterHealthCheckParams: "wait_for_status=green&timeout=1s"

sysctlInitContainer:
  enabled: true

tests:
  enabled: true

auth:
  strategy: anonymous

deployment:
  ingress:
    enabled: true
    class_name: nginx
    override_yaml:
      metadata:
        annotations:
      #     nginx.ingress.kubernetes.io/secure-backends: "true"
      #     nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
            ingress.kubernetes.io/rewrite-target: /
      # spec:
      rules:
      # - host: kube-stack.beder.co.il
        http:
          paths:
          - path: /kiali
            pathType: Prefix
            backend:
              service:
                name: kiali
                port: 
                  number: 20001
              # serviceName: kiali
              # servicePort: 20001
  host: kube-stack.beder.co.il
  resources:
    limits:
      cpu: "0.5"
      memory: 512Mi

external_services:
  prometheus:
    url: http://kube-prometheus-stack-prometheus.istio-system:9090/prometheus
    health_check_url: http://kube-prometheus-stack-prometheus.istio-system:9090/prometheus/-/healthy
  # tracing:
  #   enabled: true
  #   in_cluster_url: http://jaeger-simple-query.istio-system:16686/jaeger
  #   # TODO : change this to nginx ingress controller IP
  #   url: http://34.101.218.38/jaeger
  #   use_grpc: false
  grafana:
    enabled: true
    in_cluster_url: http://kube-prometheus-stack-grafana.istio-system/grafana
    # TODO : change this to nginx ingress controller IP
    url: http://kube-stack.beder.co.il/grafana